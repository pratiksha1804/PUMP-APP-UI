{"ast":null,"code":"import _Drawer from \"@ant-design/react-native/lib/drawer\";\nimport _WhiteSpace from \"@ant-design/react-native/lib/white-space\";\nimport _Button from \"@ant-design/react-native/lib/button\";\nimport _List from \"@ant-design/react-native/lib/list\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/shubham/Documents/Pump Project/PUMP-APP-UI/Menu.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\nvar Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _super.apply(this, arguments);\n\n    _this.onOpenChange = function (isOpen) {\n      console.log('Drawer', isOpen.toString());\n    };\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var itemArr = Array.apply(null, Array(\"\", \"User\", \"Vendor\", \"Work Order\")).map(function (p, i) {\n        return p;\n      }).map(function (p, index) {\n        if (index === 0) {\n          return React.createElement(_List.Item, {\n            key: index,\n            multipleLine: true,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }\n          }, React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }\n          }, p)));\n        }\n\n        if (p == \"User\") {\n          return React.createElement(_List.Item, {\n            key: index,\n            onPress: function onPress() {\n              return _this2.props.navigation.navigate('Book');\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }\n          }, p));\n        }\n      });\n      var sidebar = React.createElement(ScrollView, {\n        style: [styles.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, React.createElement(_List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, itemArr));\n      return React.createElement(_Drawer, {\n        sidebar: sidebar,\n        position: \"left\",\n        open: false,\n        drawerRef: function drawerRef(el) {\n          return _this2.drawer = el;\n        },\n        onOpenChange: this.onOpenChange,\n        drawerBackgroundColor: \"#ccc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          width: 70\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, React.createElement(_Button, {\n        onPress: function onPress() {\n          return _this2.drawer && _this2.drawer.openDrawer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"Open drawer\"), React.createElement(_WhiteSpace, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nexport { Menu as default };","map":{"version":3,"sources":["/home/shubham/Documents/Pump Project/PUMP-APP-UI/Menu.js"],"names":["React","styles","StyleSheet","create","container","flex","Menu","arguments","onOpenChange","isOpen","console","log","toString","itemArr","Array","apply","map","p","i","index","flexDirection","justifyContent","alignItems","props","navigation","navigate","sidebar","el","drawer","width","openDrawer","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { Button, Drawer, List, WhiteSpace } from '@ant-design/react-native';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\nexport default class Menu extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.onOpenChange = isOpen => {\n      /* tslint:disable: no-console */\n      console.log('Drawer', isOpen.toString());\n    };\n  }\n  render() {\n    const itemArr = Array.apply(null, Array(\"\",\"User\",\"Vendor\",\"Work Order\"))\n      .map(function(p, i) {\n        return p;\n      })\n      .map((p, index) => {\n        if (index === 0) {\n          return (\n            <List.Item\n              key={index}\n            //   thumb=\"https://zos.alipayobjects.com/rmsportal/eOZidTabPoEbPeU.png\"\n              multipleLine\n            >\n              <View\n                style={{\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                }}\n              >\n                <Text>{p}</Text>\n                {/* <Button\n                  type=\"primary\"\n                  size=\"small\"\n                  onPress={() => this.drawer.closeDrawer()}\n                >\n                  close drawer\n                </Button> */}\n              </View>\n            </List.Item>\n          );\n        }\n        if(p==\"User\"){\n        return (\n          <List.Item\n            key={index}\n            // thumb=\"https://zos.alipayobjects.com/rmsportal/eOZidTabPoEbPeU.png\"\n            onPress={() =>\n                this.props.navigation.navigate('Book')}\n          >\n            <Text>{p}</Text>\n\n          </List.Item>\n        );\n        }\n      });\n    // Todo: https://github.com/DefinitelyTyped/DefinitelyTyped\n    const sidebar = (\n      <ScrollView style={[styles.container]}>\n        <List>{itemArr}</List>\n      </ScrollView>\n    );\n    return (\n      <Drawer\n        sidebar={sidebar}\n        position=\"left\"\n        open={false}\n        drawerRef={el => (this.drawer = el)}\n        onOpenChange={this.onOpenChange}\n        drawerBackgroundColor=\"#ccc\"\n      >\n        <View style={{ flex: 1,width:70 }}>\n\n          <Button onPress={() => this.drawer && this.drawer.openDrawer()}>\n            Open drawer\n          </Button>\n          <WhiteSpace />\n        </View>\n      </Drawer>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}